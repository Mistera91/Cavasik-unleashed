name: aur-update-git
run-name: AUR package update by ${{ github.actor }} commit
on:
  push:
    branches:
      - 'master'
permissions:
  contents: write
jobs:
  aur-update-git:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
    steps:
      - name: Setup Runtime
        env:
          aur_key: ${{ secrets.AUR_KEY }}
        run: |
          pacman -Syy --noconfirm --needed base-devel git openssh

          mkdir -p ~/.ssh/

          echo "Host aur.archlinux.org
          IdentityFile ~/.ssh/aur
          User github" >> ~/.ssh/config
          
          echo "${aur_key}" > ~/.ssh/aur
        
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Update PKGBUILDs and .SRCINFOs
        shell: bash
        env:
          aur_folder: "./aur"
        run: |
          for folder in "$aur_folder"/*/; do
          
              folder_name=$(basename "$folder")
              # Only run if it is a pkgbase-git aur package
              if [[ $folder_name == *-git ]]; then
                
                #Check if PKGBUILD file exists in the folder
                if [[ -f "$folder/PKGBUILD" ]]; then
                  pkgrel_line=$(grep -e '^pkgrel=' "$folder/PKGBUILD")

                  # Extract the current pkgrel value
                  current_pkgrel=$(echo "$pkgrel_line" | cut -d '=' -f2)
                  new_pkgrel=$((current_pkgrel + 1))

                  # Replace the pkgrel value with the updated one
                  sed -i "s/^pkgrel=.*/pkgrel=$new_pkgrel/" "$folder/PKGBUILD"

                  echo "Updated pkgrel to $new_pkgrel in $folder/PKGBUILD"
                fi
                
                #Check if .SRCINFO file exists in the folder
                if [[ -f "$folder/.SRCINFO" ]]; then
                  pkgrel_line=$(grep -e '^pkgrel=' "$folder/.SRCINFO")

                  # Extract the current pkgrel value
                  current_pkgrel=$(echo "$pkgrel_line" | cut -d '=' -f2)
                  new_pkgrel=$((current_pkgrel + 1))

                  # Replace the pkgrel value with the updated one
                  sed -i "s/^pkgrel=.*/pkgrel=$new_pkgrel/" "$folder/.SRCINFO"

                  echo "Updated pkgrel to $new_pkgrel in $folder/.SRCINFO"
                fi
              fi
          done
          
      - name: Update AUR
        shell: bash
        env:
          aur_folder: "./aur"
          commit_hash: ${{ github.event.push.after }}
        run: |
          for folder in "$aur_folder"/*/; do
          
            folder_name=$(basename "$folder")
            # Only run if it is a pkgbase-git aur package
            if [[ $folder_name == *-git ]]; then
              # Only run if it has a PKGBUILD file
              if [[ -f "$folder/PKGBUILD" ]]; then
                # Only run if it has a .SRCINFO file
                if [[ -f "$folder/.SRCINFO" ]]; then
                  pushd $folder

                  git init
                  git remote add label ssh://aur@aur.archlinux.org/$folder_name.git
                  git fetch
                  git add PKGBUILD .SRCINFO
                  git commit -m "Github Automated: ${commit_hash}"
                  git push

                  rm -fr .git

                  echo $folder_name package was updated!
                  popd
                else
                  echo $folder_name package lacks a .SRCINFO file
                  exit 1
                fi
              else
                 echo $folder_name package lacks a PKGBUILD file
                 exit 1
              fi 
            fi
          done

      - name: Update Repository
        shell: bash
        env:
          username: ${{ github.actor }}
          email: ${{ github.event.push.pusher.email }}
        run: |
          git config --global user.name '$username'
          git config --global user.email $email
          git commit -am "Automatic AUR Update"
          git push
